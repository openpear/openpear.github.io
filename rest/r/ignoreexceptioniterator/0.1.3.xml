<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://pear.php.net/dtd/rest.release http://pear.php.net/dtd/rest.release.xsd">
    <p xlink:href="/rest/p/ignoreexceptioniterator">IgnoreExceptionIterator</p>
    <c>openpear.org</c>
    <v>0.1.3</v>
    <st>stable</st>
    <l>New BSD Licence</l>
    <m>hnw</m>
    <s>IgnoreExceptionIteratorは、SPLのイテレータで例外が発生しても無視するようなイテレータです。

引数のイテレータ内の例外をcatchし、何もせずに破棄します。

致命的な例外が発生しないとわかっている場合に、例外の破棄を簡潔に記述できます。

とはいえ例外が発生したことに気づけなくなるのは危険なので、[http://openpear.org/package/LoggerIterator:title=LoggerIterator]などと組み合わせて使うのが良いと思います。

一度例外を発生させたイテレータはエラー状態にあるとみなし、その後のメソッド呼び出しについては、本来のイテレータのメソッド呼び出しをしません。単に、valid()はfalseを、他のメソッドはnullを返します。


* 動作例

&gt;||
&lt;?php
require_once('IgnoreExceptionIterator.php');

$it = new IgnoreExceptionIterator(new EmptyIterator());
$it-&gt;current(); // returns null

$it = new EmptyIterator();
$it-&gt;current(); // throws exception
||&lt;


* ソースコード

[http://openpear.org/repository/IgnoreExceptionIterator/trunk/src/IgnoreExceptionIterator.php]</s>
    <d>IgnoreExceptionIteratorは、SPLのイテレータで例外が発生しても無視するようなイテレータです。

引数のイテレータ内の例外をcatchし、何もせずに破棄します。

致命的な例外が発生しないとわかっている場合に、例外の破棄を簡潔に記述できます。

とはいえ例外が発生したことに気づけなくなるのは危険なので、[http://openpear.org/package/LoggerIterator:title=LoggerIterator]などと組み合わせて使うのが良いと思います。

一度例外を発生させたイテレータはエラー状態にあるとみなし、その後のメソッド呼び出しについては、本来のイテレータのメソッド呼び出しをしません。単に、valid()はfalseを、他のメソッドはnullを返します。


* 動作例

&gt;||
&lt;?php
require_once('IgnoreExceptionIterator.php');

$it = new IgnoreExceptionIterator(new EmptyIterator());
$it-&gt;current(); // returns null

$it = new EmptyIterator();
$it-&gt;current(); // throws exception
||&lt;


* ソースコード

[http://openpear.org/repository/IgnoreExceptionIterator/trunk/src/IgnoreExceptionIterator.php]</d>
    <da>2009-06-03 09:07:52</da>
    <n>------------------------------------------------------------------------
r912 | hnw | 2009-06-03 06:53:07 -0700 (Wed, 03 Jun 2009) | 1 line

Only Traversable class can be wrapped. If not, throws exception.
------------------------------------------------------------------------
r904 | hnw | 2009-06-01 09:53:55 -0700 (Mon, 01 Jun 2009) | 1 line

fixed typo
------------------------------------------------------------------------
r901 | hnw | 2009-06-01 09:47:44 -0700 (Mon, 01 Jun 2009) | 1 line

do refactoring
------------------------------------------------------------------------
r899 | hnw | 2009-05-31 21:15:46 -0700 (Sun, 31 May 2009) | 1 line

1?\229?\155?\158Exception?\227?\130?\146?\229?\135?\186?\227?\129?\151?\227?\129?\159?\227?\130?\164?\227?\131?\134?\227?\131?\172?\227?\131?\188?\227?\130?\191?\227?\129?\175?\227?\130?\130?\227?\129?\134?\230?\169?\159?\232?\131?\189?\227?\129?\151?\227?\129?\170?\227?\129?\132?\227?\129?\168?\232?\166?\139?\227?\129?\170?\227?\129?\153?\227?\130?\136?\227?\129?\134?\227?\129?\171?\227?\129?\151?\227?\129?\159?\227?\128?\130?\229?\133?\183?\228?\189?\147?\231?\154?\132?\227?\129?\171?\227?\129?\175?\227?\128?\129?\228?\184?\128?\229?\186?\166Exception?\227?\130?\146catch?\227?\129?\151?\227?\129?\159?\229?\190?\140?\227?\129?\175valid()?\227?\129?\175?\229?\184?\184?\227?\129?\171false?\227?\130?\146?\232?\191?\148?\227?\129?\151?\227?\128?\129?\228?\187?\150?\227?\129?\174?\229?\133?\168?\227?\129?\166?\227?\129?\174?\227?\131?\161?\227?\130?\189?\227?\131?\131?\227?\131?\137?\227?\129?\175null?\227?\130?\146?\232?\191?\148?\227?\129?\153?\227?\130?\136?\227?\129?\134?\227?\129?\171?\227?\129?\151?\227?\129?\159?\227?\128?\130
------------------------------------------------------------------------
r894 | hnw | 2009-05-31 17:34:02 -0700 (Sun, 31 May 2009) | 1 line

initial version
------------------------------------------------------------------------</n>
    <f>2400</f>
    <g>http://openpear.org/get/IgnoreExceptionIterator-0.1.3</g>
    <x xlink:href="package.0.1.3.xml"/>
</r>